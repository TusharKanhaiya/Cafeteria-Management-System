/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caffe;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class viewOrder extends javax.swing.JFrame {

    /**
     * Creates new form viewOrder
     */
    int i=1;
    
    public viewOrder() {
        initComponents();
        this.setBounds(495, 270, 990, 540);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        viewAll = new javax.swing.JComboBox<>();
        ob = new javax.swing.JLabel();
        word = new javax.swing.JComboBox<>();
        ord = new javax.swing.JComboBox<>();
        from = new javax.swing.JLabel();
        from_dc = new com.toedter.calendar.JDateChooser();
        to = new javax.swing.JLabel();
        to_dc = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        table.setFont(new java.awt.Font("Malgun Gothic", 3, 16)); // NOI18N
        table.setForeground(new java.awt.Color(255, 51, 51));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        table.setRowHeight(30);
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 180, 970, 240);

        jButton1.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(840, 120, 110, 50);

        jButton2.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
        jButton2.setText("<- Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(450, 435, 150, 50);

        viewAll.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        viewAll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "view total amount sold", "view order" }));
        viewAll.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                viewAllItemStateChanged(evt);
            }
        });
        getContentPane().add(viewAll);
        viewAll.setBounds(320, 100, 200, 30);

        ob.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        ob.setText("Order By");
        getContentPane().add(ob);
        ob.setBounds(710, 10, 90, 27);

        word.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        word.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Order_Date", "Amount" }));
        getContentPane().add(word);
        word.setBounds(810, 10, 130, 35);

        ord.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        ord.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "asc", "desc" }));
        getContentPane().add(ord);
        ord.setBounds(870, 60, 64, 35);

        from.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        from.setText("From");
        getContentPane().add(from);
        from.setBounds(230, 30, 70, 30);

        from_dc.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        getContentPane().add(from_dc);
        from_dc.setBounds(290, 30, 160, 30);

        to.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        to.setText("To");
        getContentPane().add(to);
        to.setBounds(470, 30, 70, 30);

        to_dc.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        getContentPane().add(to_dc);
        to_dc.setBounds(500, 30, 160, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        orders od = new orders();
        od.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void viewAllItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_viewAllItemStateChanged
        // TODO add your handling code here:
        String s = viewAll.getSelectedItem().toString();
        if(s.equals("view order"))
            i=2;
        else
            i=1;
        //System.out.println(i);
    }//GEN-LAST:event_viewAllItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String query = setQuery();
        Connection con = getConnection();
        if(con!=null)
        {
            try
            {
                Statement s=con.createStatement();
                ResultSet rs=s.executeQuery(query);
                //String ID = id.getText();
                
               // System.out.println(ID +"1"+PN+"2"+s_type);
                mymodel mm = new mymodel(rs);
                table.setModel(mm);
                //con.close();
            }
            catch(Exception e)
            {
                System.out.println(e);
                JOptionPane.showMessageDialog(this,"INCORRECT details entered");
            }
                
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel from;
    private com.toedter.calendar.JDateChooser from_dc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ob;
    private javax.swing.JComboBox<String> ord;
    private javax.swing.JTable table;
    private javax.swing.JLabel to;
    private com.toedter.calendar.JDateChooser to_dc;
    private javax.swing.JComboBox<String> viewAll;
    private javax.swing.JComboBox<String> word;
    // End of variables declaration//GEN-END:variables

    private String setQuery() {
         //To change body of generated methods, choose Tools | Templates.
         String query = null;
         String words = word.getSelectedItem().toString();
        String ords = ord.getSelectedItem().toString();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String fromd = "";
        String tod = "";
        try
       {

           fromd = sdf1.format(from_dc.getDate());
           tod = sdf1.format(to_dc.getDate());
           System.out.println(fromd);
           System.out.println(tod);
       }
       catch(Exception e)
       {
           //pn.setSelectedItem("");
           System.out.println(e);
       }
        if(i==1&&!fromd.equals("") && !tod.equals(""))
            query = "select order_date as 'Date' , count(amount) as 'No. of Orders' , sum(amount) as 'Total Amount' from orders group by order_date having order_date between '"+fromd+"' and '"+tod+"' order by "+words+" "+ords;
        if(i==2&&!fromd.equals("") && !tod.equals(""))
            query = "select * from orders where order_date between '"+fromd+"' and '"+tod+"' order by "+words+" "+ords;
        
         
        System.out.println(query); 
        return query;
    }

    private Connection getConnection() {
         //To change body of generated methods, choose Tools | Templates.
         try
         {
             Class.forName("com.mysql.jdbc.Driver");
             Connection con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/cafe","root","");
             return con;
         }
         catch(Exception e)
         {
             System.out.println(e);
             Connection con = null;
             return con;
         }
    }
}
