/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caffe;

import com.mysql.jdbc.Connection;
//import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
//import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author HP
 */
public class addProduct extends javax.swing.JFrame {

    /**
     * Creates new form addProduct
     */
    public addProduct() {
        initComponents();
        //AutoCompleteDecorator.decorate(cat);
        this.setBounds(495, 270, 990, 540); 
        veg.setActionCommand("Veg");
        nonveg.setActionCommand("Non Veg");
        id.setEditable(false);
        Connection con = getConnection();
        if(con!=null)
        {
            createTable(con);
            setId(con);
            try
            {
                con.close();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }
        else
        {
            System.out.println("connection doesnt established ");
        }
        
    }

    addProduct(String ID) {
         //To change body of generated methods, choose Tools | Templates.
         initComponents();
         this.setBounds(495, 270, 990, 540);
         add.setText("Update");
         id.setEditable(false);
         veg.setActionCommand("Veg");
         nonveg.setActionCommand("Non Veg");
         id.setText(ID);
         setUpdatePara();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        veg = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nonveg = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        cat = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        avail = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel1.setText("ID");

        id.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel2.setText("Name");

        name.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel5.setText("Availability");

        buttonGroup1.add(veg);
        veg.setFont(new java.awt.Font("Malgun Gothic", 2, 24)); // NOI18N
        veg.setText("Veg");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caffe/rsz_icons8-vegetarian-food-symbol-48.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caffe/rsz_icons8-non-vegetarian-food-symbol-48.png"))); // NOI18N

        buttonGroup1.add(nonveg);
        nonveg.setFont(new java.awt.Font("Malgun Gothic", 2, 24)); // NOI18N
        nonveg.setText("Non Veg");

        jLabel8.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel8.setText("Type");

        cat.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Breads & Noodles","Pizza & Burgers","Dessert","Drinks"}));

        jLabel9.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel9.setText("Category");

        price.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        back.setFont(new java.awt.Font("Malgun Gothic", 1, 22)); // NOI18N
        back.setText("<- Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Malgun Gothic", 1, 22)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel10.setText("Price");

        avail.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        avail.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available","Not Available"}));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addGap(83, 83, 83))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(124, 124, 124)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(veg, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(avail, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addComponent(nonveg, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(320, 320, 320))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(veg)
                    .addComponent(nonveg, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(avail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        Connection con = getConnection();
        if(con!= null)
        {
           insertTable(con);
           if(add.getText().equals("ADD"))
                setId(con);
           try
           {
               con.close();
           }
           catch(Exception e)
           {
               System.out.println(e);
           }
           if(add.getText().equals("Update"))
           {
              updateProduct up = new updateProduct();
              up.setVisible(true);
              this.dispose();
           }
           
        }
        else
        {
            System.out.println("connection doesnt established ");
            JOptionPane.showMessageDialog(this,"connection is not established");
        }
    }//GEN-LAST:event_addActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if(add.getText().equals("ADD"))
        {
            products pr = new products();
            pr.setVisible(true);
            this.dispose();
        }
        else
        {
            updateProduct up = new updateProduct();
            up.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> avail;
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cat;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField name;
    private javax.swing.JRadioButton nonveg;
    private javax.swing.JTextField price;
    private javax.swing.JRadioButton veg;
    // End of variables declaration//GEN-END:variables

    private Connection getConnection() {
         //To change body of generated methods, choose Tools | Templates.
         try
         {
             Class.forName("com.mysql.jdbc.Driver");
             Connection con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/cafe","root","");
             return con;
         }
         catch(Exception e)
         {
             System.out.println("connection failed"+e);
             Connection con = null;
             return con;
         }
    }

    private void createTable(Connection con) {
         //To change body of generated methods, choose Tools | Templates.
         try
        {
                    PreparedStatement  create  = con.prepareStatement("CREATE TABLE PRODUCTS(productID int primary key auto_increment , name varchar(30) not null unique check(name!=''), type varchar(10) not null ,category varchar(30) not null, price int not null check(price>0) , availability varchar(20) )");
                    create.executeUpdate();
                    System.out.println("table created");
        }
        catch(Exception e)
        {
           //JOptionPane.showMessageDialog(this,"error in creating table!");
           System.out.println(e);
        }
    }

    private void setId(Connection con) {
         //To change body of generated methods, choose Tools | Templates.
        try
           {
               Statement s=con.createStatement();
               ResultSet rs=s.executeQuery("Select productID from products order by productID asc");
                if(rs.last())
                {
                    int id_no = rs.getInt(1);
                    id_no = id_no + 1;
                    id.setText(String.valueOf(id_no));  
                }
                else
                    id.setText("1");
                //System.out.println(rs.last() + "  " + rs.getInt(1));
                name.setText("");
                price.setText("");
           }
        catch(Exception e)
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"couldn't setID!");
        }
    }

    private void insertTable(Connection con) {
         //To change body of generated methods, choose Tools | Templates.
         try
        {
            String query = null;
            if(add.getText().equals("ADD"))
               query = "insert into products (Name,type,category,price,availability) value(?,?,?,?,?)" ;
            else
                query = "update products set Name = ? , type = ? , category = ? , price = ? , availability = ?  where productID ="+id.getText() ;
                
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1,name.getText());
            st.setString(2,buttonGroup1.getSelection().getActionCommand());
            st.setString(3, cat.getSelectedItem().toString());
            st.setInt(4, Integer.parseInt(price.getText()));
            st.setString(5, avail.getSelectedItem().toString());
            st.execute();
            if(add.getText().equals("ADD"))
                JOptionPane.showMessageDialog(this,"Product record inserted SUCCESSFULLY!");
            else
            {
                JOptionPane.showMessageDialog(this,"Product record updated SUCCESSFULLY!");
            }
        }
         catch(Exception e)
         {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"inserted duplicate/wrong enteries please TRY AGAIN!");
         }     
    }

    private void setUpdatePara() {
         //To change body of generated methods, choose Tools | Templates.
         Connection con = getConnection();
         try
         {
             if(con!=null)
             {
                 Statement s=con.createStatement();
                 //System.out.print("h1");
                 ResultSet rs=s.executeQuery("Select * from products where productID ="+id.getText());
                 rs.next();
                 name.setText(rs.getString(2));
                 String typ = rs.getString(3);
                 if ( veg.getActionCommand().toString().equals(typ))
                 {
                     veg.setSelected(true);
                 }
                 else
                 {
                     nonveg.setSelected(true);
                 }
                 cat.setSelectedItem(String.valueOf(rs.getString(4)));
                 price.setText(String.valueOf(rs.getInt(5)));
                 avail.setSelectedItem(String.valueOf(rs.getString(6)));
                 con.close();
             }
         }
         catch(Exception e)
         {
             System.out.println("update  "+e);
         }
    }
}
