/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caffe;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class addCustomer extends javax.swing.JFrame {

    /**
     * Creates new form addCustomer
     */
    addOrder aoc = null;
    int kl=0;
    public addCustomer() {
        initComponents();
        this.setBounds(495, 270, 990, 540);
        id.setEditable(false);
        add.setName("ADD");
        Connection con = getConnection();
        if(con!=null)
        {
            createTable(con);
            setId(con);
            try
            {
                con.close();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }
        else
        {
            System.out.println("connection doesnt established ");
        }
    }

    addCustomer(String ID) {
         //To change body of generated methods, choose Tools | Templates.
         initComponents();
        this.setBounds(495, 270, 990, 540);
        add.setText("Update");
        add.setName("UP");
        id.setEditable(false);
        id.setText(ID);
        setUpdatePara();
    }
    
    addCustomer(addOrder ao) {
         //To change body of generated methods, choose Tools | Templates.
         initComponents();
        this.setBounds(495, 270, 990, 540);
        aoc = ao;
        id.setEditable(false);
        add.setName("ADDC");
        //back.setName("BACKC");
        Connection con = getConnection();
        setId(con);
        try
        {
            con.close();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
    
    addCustomer(addOrder ao,int kl) {
         //To change body of generated methods, choose Tools | Templates.
         this.kl = kl;
         initComponents();
        this.setBounds(495, 270, 990, 540);
        aoc = ao;
        id.setEditable(false);
        add.setName("ADDC");
        //back.setName("BACKC");
        Connection con = getConnection();
        setId(con);
        try
        {
            con.close();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }

    addCustomer(int j) {
         //To change body of generated methods, choose Tools | Templates.
         kl = j;
         initComponents();
        this.setBounds(495, 270, 990, 540);
        id.setEditable(false);
        add.setName("ADD");
        Connection con = getConnection();
        if(con!=null)
        {
            createTable(con);
            setId(con);
            try
            {
                con.close();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }
        else
        {
            System.out.println("connection doesnt established ");
        }
    }

    addCustomer(String ID, int kl) {
         //To change body of generated methods, choose Tools | Templates.
         this.kl = kl;
         initComponents();
        this.setBounds(495, 270, 990, 540);
        add.setText("Update");
        add.setName("UP");
        id.setEditable(false);
        id.setText(ID);
        setUpdatePara();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pn = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel1.setText("ID");

        id.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        name.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel3.setText("Phone No.");

        pn.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        jLabel4.setText("Email ID");

        email.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N

        add.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
        back.setText("<- Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(back))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(445, 445, 445))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        Connection con = getConnection();
        if(con!= null)
        {
           insertTable(con);
           if(add.getText().equals("ADD") && add.getName().equals("ADD"))
                setId(con);
           try
           {
               con.close();
           }
           catch(Exception e)
           {
               System.out.println(e);
           }
           if(add.getText().equals("Update")&&add.getName().equals("UP"))
           {
               if(kl==0)
               {
                   updateCustomer uc = new updateCustomer();
                    uc.setVisible(true);
                    this.dispose();
               }
               else
               {
                   updateCustomer uc = new updateCustomer(kl);
                    uc.setVisible(true);
                    this.dispose();
               }
           }
           if(add.getName().equals("ADDC"))
           {
               //setPNC();
               //aoc.pn_ao.removeAllItems();
               String regex = "[1-9]\\d\\d\\d\\d\\d\\d\\d\\d\\d";
                if(pn.getText().matches(regex))
                {  //throw new Exception ("Incorrect Mobile no.!");
                    aoc.pn_ao = pn.getText();
                    aoc.doubt.doClick();
                }
               this.dispose();
           }
        }
        else
        {
            System.out.println("connection doesnt established ");
            JOptionPane.showMessageDialog(this,"connection is not established");
        }
    }//GEN-LAST:event_addActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if(kl == 0)
        {
            if(add.getName().equals("ADDC"))
                this.dispose();
            else
            {
                if(add.getText().equals("ADD"))
                {
                    customers ct = new customers();
                    ct.setVisible(true);
                    this.dispose();
                }
                else
                {
                    if(kl==0)
                    {
                        updateCustomer uc = new updateCustomer();
                         uc.setVisible(true);
                         this.dispose();
                    }
                    else
                    {
                        updateCustomer uc = new updateCustomer(kl);
                         uc.setVisible(true);
                         this.dispose();
                    }
                }
            }
        }
        else
        {
            customers ct = new customers(kl);
            ct.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JTextField email;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pn;
    // End of variables declaration//GEN-END:variables

    private Connection getConnection() {
         //To change body of generated methods, choose Tools | Templates.
         try
         {
             Class.forName("com.mysql.jdbc.Driver");
             Connection con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/cafe","root","");
             return con;
         }
         catch(Exception e)
         {
             System.out.println("connection failed"+e);
             Connection con = null;
             return con;
         }
    }

    private void createTable(Connection con) {
         //To change body of generated methods, choose Tools | Templates.
         try
        {
                    PreparedStatement  create  = con.prepareStatement("CREATE TABLE CUSTOMERS(customerID int primary key auto_increment , name varchar(30) not null check(name!='') ,phone_no varchar(30) not null unique check(phone_no!='') , email varchar(30) not null unique check(email!=''))");
                    create.executeUpdate();
                    System.out.println("table created");
        }
        catch(Exception e)
        {
           //JOptionPane.showMessageDialog(this,"error in creating table!");
           System.out.println(e);
        }
    }

    private void setId(Connection con) {
         //To change body of generated methods, choose Tools | Templates.
         try
           {
               Statement s=con.createStatement();
               ResultSet rs=s.executeQuery("Select customerID from customers order by customerID asc");
                if(rs.last())
                {
                    int id_no = rs.getInt(1);
                    id_no = id_no + 1;
                    id.setText(String.valueOf(id_no));  
                }
                else
                    id.setText("1");
                //System.out.println(rs.last() + "  " + rs.getInt(1));
                name.setText("");
                pn.setText("");
                email.setText("");
           }
        catch(Exception e)
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"couldn't setID!");
        }
    }

    private void insertTable(Connection con) {
        //To change body of generated methods, choose Tools | Templates.
        try
        {
            String query = null;
            if(add.getText().equals("ADD"))
               query = "insert into customers (Name,phone_no,email) value(?,?,?)" ;
            else
                query = "update customers set Name = ? , phone_no = ? , email = ?  where customerID ="+id.getText() ;
                
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1,name.getText());
            String regex = "[1-9]\\d\\d\\d\\d\\d\\d\\d\\d\\d";
            if(!pn.getText().matches(regex))
                throw new Exception ("Incorrect Mobile no.!");
            st.setString(2, pn.getText());
            st.setString(3, email.getText());
            st.execute();
            if(add.getText().equals("ADD"))
                JOptionPane.showMessageDialog(this,"Customer record inserted SUCCESSFULLY!");
            else
            {
                JOptionPane.showMessageDialog(this,"Customer record updated SUCCESSFULLY!");
            }
        }
         catch(Exception e)
         {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"inserted duplicate/wrong enteries please TRY AGAIN!");
         }
    }

    private void setUpdatePara() {
         //To change body of generated methods, choose Tools | Templates.
         Connection con = getConnection();
         try
         {
             if(con!=null)
             {
                 Statement s=con.createStatement();
                 //System.out.print("h1");
                 ResultSet rs=s.executeQuery("Select * from customers where customerID ="+id.getText());
                 rs.next();
                 name.setText(rs.getString(2));
                 pn.setText(rs.getString(3));
                 email.setText(rs.getString(4));
                 con.close();
             }
         }
         catch(Exception e)
         {
             System.out.println("update  "+e);
         }
    }
}
